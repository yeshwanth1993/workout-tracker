steps:
# Run backend linter in a single step
- name: 'python:3.9-slim'
  entrypoint: 'bash'
  args:
  - '-c'
  - 'pip install flake8 && flake8 .'
  dir: 'backend'

# Run backend tests in a single step
- name: 'python:3.9-slim'
  entrypoint: 'bash'
  args:
  - '-c'
  - 'pip install -r requirements-dev.txt && pytest .'
  dir: 'backend'

# Install frontend dependencies
- name: 'node:16'
  entrypoint: 'npm'
  args: ['install']
  dir: 'frontend'

# Run frontend linter
- name: 'node:16'
  entrypoint: 'npm'
  args: ['run', 'lint']
  dir: 'frontend'

# Run frontend tests
- name: 'node:16'
  entrypoint: 'npm'
  args: ['test', '--', '--watchAll=false']
  dir: 'frontend'

# Build and push backend image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/haroonc-exp/workout-tracker-backend/backend:$COMMIT_SHA', '.']
  dir: 'backend'
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/haroonc-exp/workout-tracker-backend/backend:$COMMIT_SHA']

# Build and push frontend image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'us-central1-docker.pkg.dev/haroonc-exp/workout-tracker-frontend/frontend:$COMMIT_SHA', '.']
  dir: 'frontend'
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/haroonc-exp/workout-tracker-frontend/frontend:$COMMIT_SHA']

# Deploy backend to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - 'workout-tracker-backend'
  - '--image=us-central1-docker.pkg.dev/haroonc-exp/workout-tracker-backend/backend:$COMMIT_SHA'
  - '--platform=managed'
  - '--region=us-central1'
  - '--allow-unauthenticated'
  - '--port=8000'

# Deploy frontend to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - 'workout-tracker-frontend'
  - '--image=us-central1-docker.pkg.dev/haroonc-exp/workout-tracker-frontend/frontend:$COMMIT_SHA'
  - '--platform=managed'
  - '--region=us-central1'
  - '--allow-unauthenticated'
  - '--port=80'

options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET